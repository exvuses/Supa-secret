local Material = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/MaterialLua/master/Module.lua"))()

local X = Material.Load({
	Title = "Star Hub",
	Style = 3,
	SizeX = 500,
	SizeY = 350,
	Theme = "Mocha",
	ColorOverrides = {
		MainFrame = Color3.fromRGB(235,235,235)
	}
})

local Y = X.New({
	Title = "Main"
})

local A = Y.Button({
	Text = "Revert Actions",
	Callback = function(Value)
	for i,v in pairs(game:GetService("ReplicatedStorage").API:GetChildren())do
	if v:IsA("RemoteEvent")then
		v:FireServer(workspace)
	end
end

wait(1)

for i,v in pairs(game:GetService("ReplicatedStorage").API:GetChildren())do
	if v:IsA("RemoteEvent")then
		v:FireServer(workspace)
	end
end
	end,
	Enabled = false
})
local B = Y.Button({
	Text = "Noclip (Click B to toggle)",
	Callback = function(Value)
local noclipplayer = game:GetService("Players").LocalPlayer
local noclipmouse = noclipplayer:GetMouse()
 
local donoclip = false
local noclip = false
 
function b_noclip(key)
if (key == "b") then
if noclip == false then
donoclip = true
 
noclip = true
elseif noclip == true then
donoclip = false
 
noclip = false
end
end
end
 
noclipmouse.KeyDown:connect(b_noclip)
 
game:GetService("Players").LocalPlayer.Character.Head.Touched:connect(function(obj)
if obj ~= workspace.Terrain then
if donoclip == true then
obj.CanCollide = false
else
obj.CanCollide = true
end
end
end)
end
})
local C = Y.Slider({
	Text = "Walkspeed",
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
	end,
	Min = 16,
	Max = 250,
	Def = 16
})
local D = Y.Slider({
	Text = "Jump Power",
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
	end,
	Min = 50,
	Max = 250,
	Def = 50
})

local E = Y.Button({
	Text = "Make all pets rideable",
	Callback = function(Value)
while true do
    
local clientData = require(game.ReplicatedStorage.ClientModules.Core.ClientData)
local playerData = clientData.get_data()[tostring(game.Players.LocalPlayer)]
for i,v in pairs(playerData.inventory.pets) do
v.properties.rideable = true
end

wait(0.00001)

local clientData = require(game.ReplicatedStorage.ClientModules.Core.ClientData)
local playerData = clientData.get_data()[tostring(game.Players.LocalPlayer)]
for i,v in pairs(playerData.inventory.pets) do
v.properties.rideable = true
    end
end
end
})
local E = Y.Button({
	Text = "Make all pets flyable",
	Callback = function(Value)
while true do
    
local clientData = require(game.ReplicatedStorage.ClientModules.Core.ClientData)
local playerData = clientData.get_data()[tostring(game.Players.LocalPlayer)]
for i,v in pairs(playerData.inventory.pets) do
v.properties.flyable = true
end

wait(0.00001)

local clientData = require(game.ReplicatedStorage.ClientModules.Core.ClientData)
local playerData = clientData.get_data()[tostring(game.Players.LocalPlayer)]
for i,v in pairs(playerData.inventory.pets) do
v.properties.flyable = true
    end
end
end
})
local E = Y.Button({
	Text = "Make all pets neon",
	Callback = function(Value)
while true do
    
local clientData = require(game.ReplicatedStorage.ClientModules.Core.ClientData)
local playerData = clientData.get_data()[tostring(game.Players.LocalPlayer)]
for i,v in pairs(playerData.inventory.pets) do
v.properties.neon = true
end

wait(0.00001)

local clientData = require(game.ReplicatedStorage.ClientModules.Core.ClientData)
local playerData = clientData.get_data()[tostring(game.Players.LocalPlayer)]
for i,v in pairs(playerData.inventory.pets) do
v.properties.neon = true
    end
end
end
})

local E = Y.Button({
	Text = "Make all pets mega neon",
	Callback = function(Value)
while true do
    
local clientData = require(game.ReplicatedStorage.ClientModules.Core.ClientData)
local playerData = clientData.get_data()[tostring(game.Players.LocalPlayer)]
for i,v in pairs(playerData.inventory.pets) do
v.properties.mega_neon = true
end

wait(0.00001)

local clientData = require(game.ReplicatedStorage.ClientModules.Core.ClientData)
local playerData = clientData.get_data()[tostring(game.Players.LocalPlayer)]
for i,v in pairs(playerData.inventory.pets) do
v.properties.mega_neon = true
    end
end
end
})
local Z = X.New({
	Title = "Autofarm"
})	

local B = Z.Toggle({
	Text = "Baby Autofarm (Money farm)",
	Callback = function(Value)
	    for i, v in pairs(debug.getupvalue(require(game:service "ReplicatedStorage".Fsys).load("RouterClient").init, 4)) do
    v.Name = i
end
getgenv().What = true
game:GetService("ReplicatedStorage").API["TeamAPI/ChooseTeam"]:InvokeServer("Babies", true)
game:GetService("ReplicatedStorage").API:FindFirstChild("DailyLoginAPI/ClaimDailyReward"):InvokeServer()
game:GetService("RunService").RenderStepped:connect(
    function()
        pcall(
            function()
                if getgenv().What then
                    if
                        game:GetService("Players").LocalPlayer.PlayerGui.AilmentsMonitorApp.Ailments:FindFirstChild(
                            "hungry"
                        )
                     then
                        game:GetService("ReplicatedStorage").API["MonitorAPI/AddAdditive"]:FireServer("hungry", 1)
                    end

                    if
                        game:GetService("Players").LocalPlayer.PlayerGui.AilmentsMonitorApp.Ailments:FindFirstChild(
                            "sleepy"
                        )
                     then
                        game:GetService("ReplicatedStorage").API["MonitorAPI/AddAdditive"]:FireServer("sleepy", 1)
                    end

                    if
                        game:GetService("Players").LocalPlayer.PlayerGui.AilmentsMonitorApp.Ailments:FindFirstChild(
                            "thirsty"
                        )
                     then
                        game:GetService("ReplicatedStorage").API["MonitorAPI/AddAdditive"]:FireServer("thirsty", 1)
                    end

                    if
                        game:GetService("Players").LocalPlayer.PlayerGui.AilmentsMonitorApp.Ailments:FindFirstChild(
                            "bored"
                        )
                     then
                        game:GetService("ReplicatedStorage").API["MonitorAPI/AddAdditive"]:FireServer("bored", 1)
                    end

                    if
                        game:GetService("Players").LocalPlayer.PlayerGui.AilmentsMonitorApp.Ailments:FindFirstChild(
                            "dirty"
                        )
                     then
                        game:GetService("ReplicatedStorage").API["MonitorAPI/AddAdditive"]:FireServer("dirty", 1)
                    end

                    if
                        game:GetService("Players").LocalPlayer.PlayerGui.AilmentsMonitorApp.Ailments:FindFirstChild(
                            "camping"
                        )
                     then
                        game:GetService("ReplicatedStorage").API["MonitorAPI/AddAdditive"]:FireServer("camping", 1)
                    end

                    if
                        game:GetService("Players").LocalPlayer.PlayerGui.AilmentsMonitorApp.Ailments:FindFirstChild(
                            "sick"
                        )
                     then
                        game:GetService("ReplicatedStorage").API["MonitorAPI/AddAdditive"]:FireServer("sick", 1)
                    end

                    if
                        game:GetService("Players").LocalPlayer.PlayerGui.AilmentsMonitorApp.Ailments:FindFirstChild(
                            "school"
                        )
                     then
                        game:GetService("ReplicatedStorage").API["MonitorAPI/AddAdditive"]:FireServer("school", 1)
                     end
                                         if
                        game:GetService("Players").LocalPlayer.PlayerGui.AilmentsMonitorApp.Ailments:FindFirstChild(
                            "salon"
                        )
                     then
                        game:GetService("ReplicatedStorage").API["MonitorAPI/AddAdditive"]:FireServer("salon", 1)
                    end
                     
                    if
                        game:GetService("Players").LocalPlayer.PlayerGui.AilmentsMonitorApp.Ailments:FindFirstChild(
                            "pizza_party"
                        )
                     then
                        game:GetService("ReplicatedStorage").API["MonitorAPI/AddAdditive"]:FireServer("pizza_party", 1)
                    end
                end
            end
        )
    end
)

spawn(
    function()
        while getgenv().What do
            wait(1)
            if game:GetService("Players").LocalPlayer.PlayerGui.CheckApp:FindFirstChild("Frame").Visible == true then
                game:GetService("ReplicatedStorage").API["PayAPI/CashOut"]:InvokeServer()
                if game:GetService("Players").LocalPlayer.PlayerGui.CheckApp:FindFirstChild("Frame") then
                    game:GetService("Players").LocalPlayer.PlayerGui.CheckApp:FindFirstChild("Frame").Visible = false
                end
            end
            game:GetService("ReplicatedStorage").API["MonitorAPI/HealWithDoctor"]:FireServer()
        end
    end
)
	end,
	Enabled = false
})

local A = Z.Button({
	Text = "PET AUTOFARM COMING SOON?",
	Callback = function()
		print("I SAID SOON")
	end
})

local C = X.New({
	Title = "Credits"
})	

local A = C.Button({
	Text = "https://discord.gg/5PgKEYekru",
	Callback = function()
		print("Discord Server")
	end
})

local A = C.Button({
	Text = "Credits to l0ud#0001 for making the script",
	Callback = function()
		print("Credits")
	end
})

local A = C.Button({
	Text = "Credits to OrangeSonic#1137 for helping out and being a real G",
	Callback = function()
		print("Credits")
	end
})

local A = C.Button({
	Text = "I forgot who made the baby autofarm but credits to them",
	Callback = function()
		print("Credits")
	end
})

